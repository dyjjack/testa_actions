
name: CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  samples-test-job:
    name: "Samples Test on ubuntu-latest"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: "Set up JDK 8"
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 8

      - name: Run maven test
        uses: xlui/action-maven-cli@jdk8
        with:
          lifecycle: 'clean package test'

      - name: "Upload jmh output result"
        uses: actions/upload-artifact@v3
        with:
          name: samples-jmh-result
          path: /tmp/jmh_result/

      - name: Push results to results repository
        env:
          RESULTS_REPO_OWNER: wxbty
          RESULTS_REPO_NAME: jmh_result
          RESULTS_REPO_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.PUSH_TOKEN }}
        run: |
          if [[ ! -f /tmp/jmh_result.json ]]; then
            echo "/tmp/jmh_result.json does not exist. Exiting..."
            exit 0
          fi
          git clone https://github.com/${RESULTS_REPO_OWNER}/${RESULTS_REPO_NAME}.git jmh_result
          cd jmh_result
          git config user.email "wxb_101@163.com"
          git config user.name "wxbty"

          WORK_DIR="$(pwd)"
          echo "WorkDir: $WORK_DIR"
          DIRECTORY_PATH="$WORK_DIR/test-results"
          cp "/tmp/jmh_result.json" "$DIRECTORY_PATH/jmh_result_$(date +%Y%m%d)_$RANDOM.json"

          MAX_FILES=5
          files=($(ls -t1 "$DIRECTORY_PATH" | tail -n +2))
          if [[ ${#files[@]} -gt $MAX_FILES ]]; then
            oldest_file="${files[0]}"
            echo "删除最旧的文件: $oldest_file"
            rm "$DIRECTORY_PATH/$oldest_file"
          fi

          merged_file="merged_results.json"
          rm -rf "$DIRECTORY_PATH/$merged_file"
          
          sudo apt-get update
          sudo apt-get install -y jq
          
          json_array=()
          for file in $(ls -t1 "$DIRECTORY_PATH"/*.json); do
           if [ -f "$file" ]; then
              json_array+=( "$(cat "$file")" )
           fi
          done
          
          merged_json=$(echo "${json_array[@]}" | jq -s add)
          echo "$merged_json" > "$DIRECTORY_PATH/$merged_file"

          git add test-results
          git commit -m "Add test results 1 from $(date +'%Y-%m-%d %H:%M:%S')"
          git push https://${GITHUB_TOKEN}@github.com/${RESULTS_REPO_OWNER}/${RESULTS_REPO_NAME}.git ${RESULTS_REPO_BRANCH}
